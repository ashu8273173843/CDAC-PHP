PHP:
pHp: HyperText Processor is basically a server side programming technology and language for developing internet based Applications that run on a web server like Apache Tom cat and perform server side programming constructs. This is one of the most primitive ways of developing web apps in the computing world. It is open source licenced under Apache 2.0. and with no cost maintainance. It is very popular among the startups for its easy to develop as well as maintain it. pHp is supported by Open Source community to provide its own set of Frameworks like Code Ignitor for developing MVC based Apps.
Its server side technology for developing dynamic content. pHp language is simple and easy to develop. 
There are various flavors for creating the stack for developing pHp Apps on various platforms. 
LAMP:(Linux, Apache, MySQL, pHp)
WAMP:(Windows,Apache, MySQL, pHp)
XAMP:(xOs,Apache, MySQL, pHp)

U choose the platform and the required stack framework could be installed in ur machines. 
U will have MYSQL as UR database, Apache as UR web server and pHp would be UR server side technology for developing dynamic web content.

All UR Files for the php are to be created in a sp folder inside wamp environment. www is the folder that is created inside the wamp folder. All UR Apps and files are created in this folder only. 
PS: Alternatively U could create UR App folder anywhere in the machine and provide a virtual address to the wamp. This is called as Virtual Directories. 

How pHp is processed?
When a page is requested by the user thro browsers, an HTTP object is created for U. This contains a host of other objects called: Request, Response, Session, Application, Server, Errors. These objects are a part of every request made by the user as well as the response to the request generated by the server. This stds for creating the HTTP Requests and Responses are managed by the webserver and the browsers as per the recommendations of w3c. 
HTTP is a stateless object. It means any information about a request will not hold for the next request. Every request is unique. 

Http objects:
Request: Contains the info about the page that client wishes to view/read.
Response: Contains the result of the request made by the user. It is generated by the web Server as a result(return) to the request made.  
Session: A unique scope that will be available within the server for every user who hits the web server. This session will remain as long as the user(Browser instance) interacts with the server.  
Application: If any data has to be shared among all the users of the Application, we use Application objects. They are created when the first request is made by the first user and will remain so till the server is shut down. This info is shared among all the users of the application. 
Server: If U want to create any object inside the server, we could use this server object. Server objects also allow navigating thro various pages within the server. (Server.transfer)
Context: is a complete object that contains capabilities to do advanced operations like IPC, Socket programming and many more. 
Errors: Contain a host of error information for all the users of the Application. This log of errors is what is used to determine the diagnostics of the server(reason and substition if the error occurs)

Ways of transfering data from the browser to server: 
GET and POST methods are used by the clients to send information to the server. The server processed it based on the method used and sends the reponse accordingly.
POST will send the information thro HTTPPOST where the data sent is hidden and secured and can be accessed only thro $_POST. 
GET is typically used to send information on what U want to get from the server. The information will be passed thro the URL of the web page. This information will be in the form of key-value pairs each seperated by an &. This is called as QueryString.  The info will also be the part of the HISTORY of the browser, its easy for anyone to get that information that U would have sent to the server. Server will access this information thro Request.QueryString or php's function called $_GET.

echo is the API used for displaying content in a Php document. It is also used to display other php files into the current document. php is not case sensitive, so ECHO and echo means the same....

only for the last statement of execution, U can ignore the ';', else every statement in php has to be ended with a ;

. operator is used in php to concatinate the strings.... 
All variables should be prefixed with $. For adding numeric variables U should use the + operator. The other mathematic operators are still intact.   

One or more statements are combined to form functions that can be used across different php pages within an application. function keyword is used to declare a function followed by the name and the arg list provided within the (). Syntax is similar to JS function... parameters are prefixed with $...

Every request is unique in a Server side program. The request and the response U obtain from a request is unique for a given request. Any new request will not have any information about the previous request made by the same user. It is use either sessions or applications to interact with that kind of data. So a typical JS kind of global variables are not available in php....

To represent composite data in UR Application, we use classes. Classes are object oriented approach for storing multiple sets of data as single unit. 

Technically its not possible to share data between 2 requests and their respective responses. So applications use sessions, the variables created per user inside the server. Session variables are limited to the user as long as the session with that user is enabled. Sessions get lost if the user closes the browser, moves to another website and tries to come back, Programmers deleting the session by abandoning and session timedout-> usually if the browser is idle for the more than the speculated interval of time. Each session is unique to the user and is identified by sessionId which is stored as cookie into the client's machine. 
Cookies are small text files that are stored in the browser to hold small information required for the application. Ofcourse, it will take appropriate permissions from the user before it actually starts storing it. 
Sessions in php are represented as an global object $_SESSION. Its an associate array and U could add data into the session in the form of key-value pairs.  Sessions can store any form of data. It means that U could create classes and objects and store it inside the session...

JSON: Json is JavaScript Object Notation. Its a light weight data representation format used for transfering data in the form of text. HTTP is stateless object which is also based on text transformation. So most the HTTP based services use JSON as the format of transfering content. It provides a simple human readable data. Data will be self explainatory and because its based on JS, Browsers can interpret the data in a easy manner, programmers can use this format of sharing the data as most convinient and std way along with XML.
Json files are saved as .json.. Most of the web services use Json as the format of sharing the information to their clients.
Main uses of Json: 
Used for writing JS applications that get the data from an external source like REST, Web services etc...
Json format is easy to serialize and transmitt data over a networking environment. Currently most of the data coming from an database is transfered in the form of Json to their clients. 

In Php:
Convert data into json: json_encode
Convert json to data : json_decode

In jQuery/Javascript:
Convert data into json: JSON.stringyfy
Convert json to data : JSON.parse

